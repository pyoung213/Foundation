name: Publish

on: [push]

# on:
#   pull_request:
#     branches:
#       - master
#     types: [closed]

jobs:
  publish-async:
    name: publish-async
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: 10

    - name: Set Current Version
      shell: bash -ex {0}
      run: |
        CURRENT_VERSION=$(node -p 'require("./packages/async/package.json").version')
        echo "::set-env name=CURRENT_VERSION::${CURRENT_VERSION}"

    - name: Tag Check
      id: tag_check
      shell: bash -ex {0}
      run: |
        GET_API_URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/git/ref/tags/async-v${CURRENT_VERSION}"
        http_status_code=$(curl -LI $GET_API_URL -o /dev/null -w '%{http_code}\n' -s \
          -H "Authorization: token ${GITHUB_TOKEN}")
        if [ "$http_status_code" -ne "404" ] ; then
          echo "::set-output name=exists_tag::true"
        else
          echo "::set-output name=exists_tag::false"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Create Git Tag
      if: steps.tag_check.outputs.exists_tag == 'false'
      uses: azu/action-package-version-to-git-tag@v1
      with:
        version: ${{ env.CURRENT_VERSION }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
        github_repo: ${{ github.repository }}
        git_commit_sha: ${{ github.sha }}
        git_tag_prefix: "async-v"

    - name: Publish
      if: steps.tag_check.outputs.exists_tag == 'false'
      run: |
        yarn
        yarn build
        echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
        yarn publish:async
      env:
        NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

  publish-low:
    name: publish-low
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: 10

    - name: Set Current Version
      shell: bash -ex {0}
      run: |
        CURRENT_VERSION=$(node -p 'require("./packages/low/package.json").version')
        echo "::set-env name=CURRENT_VERSION::${CURRENT_VERSION}"

    - name: Tag Check
      id: tag_check
      shell: bash -ex {0}
      run: |
        GET_API_URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/git/ref/tags/low-v${CURRENT_VERSION}"
        http_status_code=$(curl -LI $GET_API_URL -o /dev/null -w '%{http_code}\n' -s \
          -H "Authorization: token ${GITHUB_TOKEN}")
        if [ "$http_status_code" -ne "404" ] ; then
          echo "::set-output name=exists_tag::true"
        else
          echo "::set-output name=exists_tag::false"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Create Git Tag
      if: steps.tag_check.outputs.exists_tag == 'false'
      uses: azu/action-package-version-to-git-tag@v1
      with:
        version: ${{ env.CURRENT_VERSION }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
        github_repo: ${{ github.repository }}
        git_commit_sha: ${{ github.sha }}
        git_tag_prefix: "low-v"

    - name: Publish
      if: steps.tag_check.outputs.exists_tag == 'false'
      run: |
        yarn
        yarn build
        echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
        yarn publish:low
      env:
        NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
  
  publish-firebase:
    name: publish-firebase
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: 10

    - name: Set Current Version
      shell: bash -ex {0}
      run: |
        CURRENT_VERSION=$(node -p 'require("./packages/firebase/package.json").version')
        echo "::set-env name=CURRENT_VERSION::${CURRENT_VERSION}"

    - name: Tag Check
      id: tag_check
      shell: bash -ex {0}
      run: |
        GET_API_URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/git/ref/tags/firebase-v${CURRENT_VERSION}"
        http_status_code=$(curl -LI $GET_API_URL -o /dev/null -w '%{http_code}\n' -s \
          -H "Authorization: token ${GITHUB_TOKEN}")
        if [ "$http_status_code" -ne "404" ] ; then
          echo "::set-output name=exists_tag::true"
        else
          echo "::set-output name=exists_tag::false"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Create Git Tag
      if: steps.tag_check.outputs.exists_tag == 'false'
      uses: azu/action-package-version-to-git-tag@v1
      with:
        version: ${{ env.CURRENT_VERSION }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
        github_repo: ${{ github.repository }}
        git_commit_sha: ${{ github.sha }}
        git_tag_prefix: "firebase-v"

    - name: Publish
      if: steps.tag_check.outputs.exists_tag == 'false'
      run: |
        yarn
        yarn build
        echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
        yarn publish:firebase
      env:
        NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
